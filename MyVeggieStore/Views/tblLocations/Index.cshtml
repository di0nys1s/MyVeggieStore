@model IEnumerable<MyVeggieStore.Models.tblLocation>

@{
    ViewBag.Title = "Index";
}

<h2>Store Locations</h2>
<div id="map" style="height:300px"></div>



<br />

@*
    <p>
        @Html.ActionLink("Create New", "Create", "Locations", new { @class = "btn btn-primary" })
    </p>

*@

@if (Request.IsAuthenticated && User.IsInRole("Admin"))
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Latitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Longitude)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr class="coordinates">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="description">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td class="latitude">
                    @Html.DisplayFor(modelItem => item.Latitude)
                </td>
                <td class="longitude">
                    @Html.DisplayFor(modelItem => item.Longitude)
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
}
else
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Latitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Longitude)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr class="coordinates">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="description">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td class="latitude">
                    @Html.DisplayFor(modelItem => item.Latitude)
                </td>
                <td class="longitude">
                    @Html.DisplayFor(modelItem => item.Longitude)
                </td>
                @*
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>

                *@
            </tr>
        }
    </table>
}


@*

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Latitude)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Longitude)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr class="coordinates">
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td class="description">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td class="latitude">
                        @Html.DisplayFor(modelItem => item.Latitude)
                    </td>
                    <td class="longitude">
                        @Html.DisplayFor(modelItem => item.Longitude)
                    </td>

                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        </td>


            </tr>
        }



    </table>





*@


@section Scripts {
    @Scripts.Render("~/bundles/mapbox")
}



    @*<script>
        var data = [];
        mapboxgl.accessToken = 'pk.eyJ1IjoiZGkwbnlzMXMiLCJhIjoiY2puMDFzNG15MWpzdjN2bmtsdmZhNzVwOSJ9.iC9G3kHfzzq04qIN08HrKg';
        // eslint-disable-next-line no-undef

        var mapboxClient = mapboxSdk({ accessToken: mapboxgl.accessToken });
        var map = new mapboxgl.Map({
            container: 'maps',
            style: 'mapbox://styles/mapbox/streets-v10',
            center: [145.031588, -37.889921],
            zoom: 11
        });

        map.addControl(new mapboxgl.NavigationControl());

        map.addControl(new MapboxDirections({
            accessToken: mapboxgl.accessToken
        }), 'top-left');

        map.addControl(new mapboxgl.GeolocateControl({
            positionOptions: {
                enableHighAccuracy: true
            },
            trackUserLocation: true
        }));

        map.on('mouseenter', 'places', function () {
            map.getCanvas().style.cursor = 'pointer';
        });
        // Change it back to a pointer when it leaves.
        map.on('mouseleave', 'places', function () {
            map.getCanvas().style.cursor = '';
        });
    </script>*@